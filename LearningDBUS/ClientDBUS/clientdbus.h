/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c ClientDBus -p clientdbus.h:clientdbus.cpp simpleInterface.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef CLIENTDBUS_H_1323265596
#define CLIENTDBUS_H_1323265596

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.nokia.Demo
 */
class ClientDBus: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.nokia.Demo"; }

public:
    ClientDBus(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~ClientDBus();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> SayBye()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("SayBye"), argumentList);
    }

    inline QDBusPendingReply<> SayHello(const QString &name, const QVariantMap &customdata)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(name) << qVariantFromValue(customdata);
        return asyncCallWithArgumentList(QLatin1String("SayHello"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void LateEvent(const QString &eventkind);
};

namespace com {
  namespace nokia {
    typedef ::ClientDBus Demo;
  }
}
#endif
